{"version":3,"file":"component---src-pages-index-jsx-2969a2ef4142b79d3f80.js","mappings":"oMAiDA,IA5CiB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAGlC,OACI,uBAAKC,UAAU,sBACX,uBAAKA,UAHT,snBAIQ,gBAAC,EAAAC,EAAD,CACID,UAAU,cACVF,OAAOI,EAAAA,EAAAA,GAASJ,GAChBF,IAAKA,EACLO,MAAM,SAETJ,GACGA,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAYC,GAAnB,mBACR,gBAAC,IAAD,eACIC,IAAKH,GACDE,EAFR,CAGIE,KAAI,UAAYZ,EAChBG,UAAU,4HAETM,EACD,gBAAC,EAAAI,EAAD,CACIV,UAAU,8CACVW,IAAI,4CACJf,IAAI,OACJO,MAAM,OAJV,qBARI,KAmB/B,C,oICrCD,EAAe,IAA0B,wD,mBCgGzC,EA1FiB,SAAC,GAAc,IAAD,QAAXS,EAAW,EAAXA,KAChB,OACI,2BACIZ,UAAU,8FACVa,MAAO,CACHC,gBAAgB,OAAQC,EAAT,MAGnB,uBAAKf,UAAU,uBACX,uBAAKA,UAAU,qBACVY,SAAA,UAAAA,EAAMI,gBAAN,eAAiB,KACd,sBAAIhB,UAAU,iDACTY,EAAKI,SAAS,GAAGV,UAGzBM,SAAA,UAAAA,EAAMK,aAAN,eAAc,KACX,qBAAGjB,UAAU,iDACRY,EAAKK,MAAM,GAAGX,UAK1CM,SAAA,UAAAA,EAAMK,aAAN,eAAc,KACS,qBAAGjB,UAAU,qCACRY,EAAKK,MAAM,GAAGX,UAK1CM,SAAA,UAAAA,EAAMK,aAAN,eAAc,KACS,qBAAGjB,UAAU,qCACRY,EAAKK,MAAM,GAAGX,UAKtBM,aAAA,EAAAA,EAAMb,UACHa,EAAKb,QAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAAYC,GAAnB,mBACb,gBAAC,IAAD,eAAQC,IAAKH,GAAQE,EAArB,CAA4BP,UAAU,eACjCM,EACD,gBAAC,EAAAI,EAAD,CACIV,UAAU,oDACVW,IAAI,8CACJf,IAAI,OACJO,MAAM,OAJV,sBAHS,MAa7B,uBAAKH,UAAU,+BACX,gBAAC,EAAAU,EAAD,CACIV,UAAU,0BACVW,IAAI,yDACJf,IAAI,OACJO,MAAM,OAJV,uBASf,E,UCzCD,EAtBwB,SAAC,GAAoD,IAAlDA,EAAiD,EAAjDA,MAAOe,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAChDC,GAASnB,EAAAA,EAAAA,GAASiB,GAClBG,GAASpB,EAAAA,EAAAA,GAASkB,GACxB,OACI,uBAAKpB,UAAU,8BACX,uBAAKA,UAAU,yBACX,gBAAC,EAAAC,EAAD,CAAaD,UAAU,QAAQF,MAAOuB,EAAQzB,IAAKO,EAAOA,MAAM,SAChE,sBAAIH,UAAU,6BAA6BG,GAC3C,qBAAGH,UAAU,wBAAwBkB,IAEzC,uBAAKlB,UAAU,wBACX,gBAAC,EAAAC,EAAD,CAAaH,MAAOwB,EAAQ1B,IAAKO,EAAOA,MAAM,UAI7D,EC6BD,EA3C4B,SAAC,GAAc,IAAZS,EAAW,EAAXA,KAC3B,OACI,2BAASZ,UAAU,kBACf,uBAAKA,UAAU,mBACVY,aAAA,EAAAA,EAAMW,gBACH,gBAAC,IAAD,eACIC,QAASZ,aAAF,EAAEA,EAAMW,cAAcC,SACzBZ,EAAKW,gBAGjB,uBAAKvB,UAAU,qCACVY,aAAA,EAAAA,EAAMa,SACHb,aADH,EACGA,EAAMa,MAAMrB,KAAI,SAACsB,GAAD,OACZ,uBACIlB,IAAKkB,EAAKrB,GACVL,UAAU,iCAEV,gBAAC,EAAD,CACIG,MAAOuB,EAAKV,SAAS,GAAGV,QACxBqB,MAAOD,EAAKV,SAAS,GAAGW,MACxBR,UAAWO,EAAKE,OAAO,GAAGjB,IAC1BS,YAAaM,EAAKE,OAAO,GAAGjB,IAC5BO,YAAaQ,EAAKR,cAVd,OAkBvC,E,QCqCD,EAlEsB,SAAC,GAAkC,IAGtCW,EAAUC,EAHJ3B,EAA+B,EAA/BA,MAAOL,EAAwB,EAAxBA,MAAOiC,EAAiB,EAAjBA,WAI/BA,IAEAF,EADYE,EAAWC,MAAM,KAAM,GACd,GACrBF,EAAgBC,EAAWC,MAAM,KAAK,IAE1C,OAA0BC,EAAAA,EAAAA,WAAS,GAA5BC,EAAP,KAAeC,EAAf,KAEA,OACI,gBAAC,EAAAC,SAAD,KACI,uBAAKpC,UAAU,mDACX,gBAAC,EAAAC,EAAD,CACID,UAAU,4BACVF,OAAOI,EAAAA,EAAAA,GAASJ,GAChBF,IAAI,OACJO,MAAM,SAEV,uBAAKH,UAAU,gGACX,wBACIA,UAAU,qEACVqC,KAAK,SACLC,SAAS,IACTC,QAAS,kBAAMJ,GAAQ,EAAd,EACTK,WAAY,SAACC,GAAD,OAAOC,QAAQC,IAAIF,EAAnB,GAEZ,wBACIzC,UAAU,0FAGd,gBAAC,EAAAU,EAAD,CACIV,UAAU,WACVW,IAAI,wCACJf,IAAI,OACJO,MAAM,OAJV,uBASR,uBAAKH,UAAU,6EACX,gBAAC,EAAAU,EAAD,CACIC,IAAI,oDACJf,IAAI,OACJO,MAAM,OAHV,sBAKA,sBAAIH,UAAU,4LACTG,KAIb,gBAAC,IAAD,CACIyC,QAASd,EACTe,QAAShB,EACTK,OAAQA,EACRC,QAASA,IAIxB,E,UCaD,EAxE8B,SAAC,GAAc,IAAZvB,EAAW,EAAXA,KAC7B,OACI,2BAASZ,UAAU,qCACf,uBAAKA,UAAU,aACX,uBAAKA,UAAU,YACX,gBAAC,IAAD,CACIA,UAAU,WACV8C,OAAQ,CACJC,IAAK,wBACLC,KAAM,yBAEVC,WAAY,CACRC,OAAQ,iCACRC,OAAQ,kCAEZC,cAAe,EACfC,aAAc,IAEbzC,aAAA,EAAAA,EAAMa,SACHb,aADH,EACGA,EAAMa,MAAMrB,KAAI,SAACsB,GAAD,iBACZ,gBAAC,IAAD,CAAalB,IAAKkB,EAAKrB,IACnB,gBAAC,EAAD,CACIF,MACIuB,SADC,UACDA,EAAM4B,qBADL,aACD,EAAqBtC,SAAS,GACzBV,QAETR,MACI4B,SADC,UACDA,EAAM4B,qBADL,aACD,EAAqB1B,OAAO,GAAGjB,IAEnCoB,WAAYL,SAAF,UAAEA,EAAM4B,qBAAR,aAAE,EAAqBC,OAV7B,MAexB,uBAAKvD,UAAU,2DACX,uBACIA,UAAU,yPAIV,gBAAC,EAAAU,EAAD,CACIC,IAAI,oDACJf,IAAI,OACJO,MAAM,OAHV,uBAMJ,uBACIH,UAAU,4OAIV,gBAAC,EAAAU,EAAD,CACIC,IAAI,oDACJf,IAAI,OACJO,MAAM,OAHV,0BAW3B,E,UChBD,EA/CyB,SAAC,GAAc,IAAZS,EAAW,EAAXA,KACxB,OACI,2BAASZ,UAAU,uDACf,uBAAKA,UAAU,cACVY,aAAA,EAAAA,EAAMW,gBACH,uBAAKvB,UAAU,uBACX,gBAAC,IAAD,eACIwB,QAASZ,aAAF,EAAEA,EAAMW,cAAcC,SACzBZ,EAAKW,iBAKrB,uBAAKvB,UAAU,yBACVY,aAAA,EAAAA,EAAMa,SACHb,aADH,EACGA,EAAMa,MAAMrB,KAAI,SAACsB,GAAD,aACZ,uBACI1B,UAAU,gCACVQ,IAAKkB,EAAKrB,IAEV,gBAAC,IAAD,CACImD,KAAM9B,aAAF,EAAEA,EAAM8B,KACZ3D,KAAM6B,aAAF,EAAEA,EAAM7B,KACZC,MAAO4B,EAAK+B,SAAS9C,IACrBf,IAAK8B,SAAF,UAAEA,EAAM+B,gBAAR,aAAE,EAAgB7D,IACrBG,QAAS2B,aAAF,EAAEA,EAAM3B,QACfI,MAAM,SAXF,OAmBvC,E,UCiDD,EA7EkB,SAAC,GAAc,IAAD,IAAXS,EAAW,EAAXA,KACX8C,GAAgBC,EAAAA,EAAAA,iBAAe/C,SAAA,UAAAA,EAAMgD,kBAAN,eAAkBC,QAAS,IAC1DvD,GAAUqD,EAAAA,EAAAA,iBAAe/C,SAAA,UAAAA,EAAMkD,YAAN,eAAYxD,UAAW,IACtD,OACI,gBAAC,IAAD,CACIM,KAAI,iBACG8C,EAAa,KACbA,EAAa,SAGpB,gBAAC,IAAD,CAAKvD,MAAM,OAAO4D,SAAS,MAC3B,gBAAC,EAAD,CAAUnD,KAAMN,EAAQ,kBACxB,gBAAC,EAAD,CAAqBM,KAAMN,EAAQ,qBACnC,uBAAKO,MAAO,CAACmD,UAAU,WACnB,gBAAC,EAAD,CAAuBpD,KAAM,CAAEa,MAAOb,EAAKqD,SAASJ,UAGxD,gBAAC,EAAD,CACIjD,KAAI,iBACGN,EAAQ,yBADX,CAEAmB,MAAOb,EAAKsD,SAASL,UAMxC,C","sources":["webpack://gatsby-starter-default/./src/components/games-card/index.jsx","webpack://gatsby-starter-default/./src/data/images/hero/hero-bg1.webp","webpack://gatsby-starter-default/./src/container/home/hero/index.jsx","webpack://gatsby-starter-default/./src/components/welcome-features/index.jsx","webpack://gatsby-starter-default/./src/container/home/welcome-features/index.jsx","webpack://gatsby-starter-default/./src/components/live-streaming/index.jsx","webpack://gatsby-starter-default/./src/container/home/watch-live-streaming/index.jsx","webpack://gatsby-starter-default/./src/container/home/popular-game/index.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx"],"sourcesContent":["import { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../shared/button\";\n\nconst GameCard = ({ alt, slug, image, buttons }) => {\n    const game_thumb =\n        \"group mt-10 relative text-white font-bold after:absolute content-after after:border-4 after:bg-gray-80 after:z-10 after:border-opacity-50 after:w-full after:h-full after:z-0  after:rounded-5xl after:top-1/2  after:left-1/2  after:transform  after:-translate-x-2/4  after:-translate-y-2/4  after:transition  after:opacity-0  hover:after:opacity-70 before:bg-secondary-100 before:empty-content before:absolute before:w-full  before:h-full before:z-10 before:rounded-5xl before:top-1/2 before:left-1/2 before:transform before:-translate-x-2/4 before:-translate-y-2/4 before:transition-all before:opacity-0 hover:before:opacity-70\";\n    return (\n        <div className=\"game-card relative\">\n            <div className={game_thumb}>\n                <GatsbyImage\n                    className=\"rounded-4xl\"\n                    image={getImage(image)}\n                    alt={alt}\n                    title=\"game\"\n                />\n                {buttons &&\n                    buttons.map(({ id, content, ...props }) => (\n                        <Button\n                            key={id}\n                            {...props}\n                            path={`/games/${slug}`}\n                            className=\"text-white absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 z-20 opacity-0 group-hover:opacity-100\"\n                        >\n                            {content}\n                            <StaticImage\n                                className=\"align-middle ml-3 transition-all hover:ml-5\"\n                                src=\"../../data/images/icons/arrrow-icon2.webp\"\n                                alt=\"game\"\n                                title=\"game\"\n                            />\n                        </Button>\n                    ))}\n            </div>\n        </div>\n    );\n};\nGameCard.propTypes = {\n    alt: PropTypes.string,\n    date: PropTypes.string,\n    slug: PropTypes.string,\n    image: PropTypes.object,\n    buttons: PropTypes.arrayOf(\n        PropTypes.shape({\n            content: PropTypes.string,\n        })\n    ),\n};\nexport default GameCard;\n","export default __webpack_public_path__ + \"static/hero-bg1-82fc7416624f7e54a222475671a5e21d.webp\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport Button from \"../../../components/shared/button\";\nimport HeroImage from \"../../../data/images/hero/hero-bg1.webp\";\n\nconst HeroArea = ({ data }) => {\n    return (\n        <section\n            className=\"relative h-540 md:h-650 lg:h-780 xl:h-940 bg-no-repeat bg-center bg-cover flex items-center\"\n            style={{\n                backgroundImage: `url(${HeroImage})`,\n            }}\n        >\n            <div className=\"container px-4 z-10\">\n                <div className=\"text-white mt-16\">\n                    {data?.headings?.[0] && (\n                        <h1 className=\"mb-6 sm:mb-10 text-shadow uppercase max-w-3xl\">\n                            {data.headings[0].content}\n                        </h1>\n                    )}\n                    {data?.texts?.[0] && (\n                        <p className=\"text-base lg:text-md font-bold mb-6 sm:mb-10 \">\n                            {data.texts[0].content}\n                        </p>\n                        \n                    )}\n\n{data?.texts?.[1] && (\n                        <p className=\"text-base font-bold mb-6 sm:mb-10\">\n                            {data.texts[1].content}\n                        </p>\n                        \n                    )}\n\n{data?.texts?.[2] && (\n                        <p className=\"text-base font-bold mb-6 sm:mb-10\">\n                            {data.texts[2].content}\n                        </p>\n                        \n                    )}\n\n                    {data?.buttons &&\n                        data.buttons.map(({ id, content, ...props }) => (\n                            <Button key={id} {...props} className=\"text-white\">\n                                {content}\n                                <StaticImage\n                                    className=\"align-middle ml-3 transition-all group-hover:ml-5\"\n                                    src=\"../../../data/images/icons/arrrow-icon.webp\"\n                                    alt=\"game\"\n                                    title=\"game\"\n                                />\n                            </Button>\n                        ))}\n                </div>\n            </div>\n            <div className=\"absolute right-0.5 bottom-0\">\n                <StaticImage\n                    className=\"w-96 md:w-650 xl:w-auto\"\n                    src=\"../../../data/images/game/monster-against/Asset 27.png\"\n                    alt=\"game\"\n                    title=\"game\"\n                />\n            </div>\n        </section>\n    );\n};\nHeroArea.propTypes = {\n    data: PropTypes.shape({\n        headings: PropTypes.arrayOf(\n            PropTypes.shape({\n                level: PropTypes.string,\n                content: PropTypes.string,\n            })\n        ),\n        texts: PropTypes.arrayOf(\n            PropTypes.shape({\n                content: PropTypes.string,\n            })\n        ),\n        buttons: PropTypes.arrayOf(\n            PropTypes.shape({\n                content: PropTypes.string,\n            })\n        ),\n        images: PropTypes.arrayOf(\n            PropTypes.shape({\n                src: PropTypes.oneOfType([\n                    PropTypes.string,\n                    PropTypes.shape({}),\n                ]).isRequired,\n                alt: PropTypes.string,\n            })\n        ),\n    }),\n};\nexport default HeroArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nconst WelcomeFeatures = ({ title, description, iconImage, bgShapImage }) => {\n    const image1 = getImage(iconImage);\n    const image2 = getImage(bgShapImage);\n    return (\n        <div className=\"py-15 px-12 relative mt-10\">\n            <div className=\"content relative z-10\">\n                <GatsbyImage className=\"mb-10\" image={image1} alt={title} title=\"game\"/>\n                <h3 className=\"font-bold text-white mb-4\">{title}</h3>\n                <p className=\"text-white leading-7\">{description}</p>\n            </div>\n            <div className=\"absolute inset-0 z-0\">\n                <GatsbyImage image={image2} alt={title} title=\"game\"/>\n            </div>\n        </div>\n    );\n};\nWelcomeFeatures.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    iconImage: PropTypes.object,\n    bgShapImage: PropTypes.object,\n};\nexport default WelcomeFeatures;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SectionTitle from \"../../../components/title\";\nimport WelcomeFeatures from \"../../../components/welcome-features\";\nconst WelcomeFeaturesArea = ({ data }) => {\n    return (\n        <section className=\"pt-16 md:pt-24\">\n            <div className=\"container px-4\">\n                {data?.section_title && (\n                    <SectionTitle\n                        heading={data?.section_title.heading}\n                        {...data.section_title}\n                    />\n                )}\n                <div className=\"flex flex-wrap -mx-3 text-center\">\n                    {data?.items &&\n                        data?.items.map((item) => (\n                            <div\n                                key={item.id}\n                                className=\"w-full md:w-1/2 lg:w-1/3 px-4\"\n                            >\n                                <WelcomeFeatures\n                                    title={item.headings[0].content}\n                                    level={item.headings[0].level}\n                                    iconImage={item.images[0].src}\n                                    bgShapImage={item.images[1].src}\n                                    description={item.description}\n                                />\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </section>\n    );\n};\nWelcomeFeaturesArea.propTypes = {\n    data: PropTypes.shape({\n        section_title: PropTypes.shape({\n            heading: PropTypes.string,\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\nexport default WelcomeFeaturesArea;\n","import React, { Fragment, useState } from \"react\";\nimport { StaticImage, GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport PropTypes from \"prop-types\";\nimport Video from \"@components/shared/video\";\n\nconst LiveStreaming = ({ title, image, video_link }) => {\n    // Video Modal Popup\n\n    let video_arr, video_id, video_channel;\n    if (video_link) {\n        video_arr = video_link.split(\"=\", -1);\n        video_id = video_arr[1];\n        video_channel = video_link.split(\".\")[1];\n    }\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <Fragment>\n            <div className=\"gaming_video_thumb relative inline-block w-auto\">\n                <GatsbyImage\n                    className=\"h-260 md:h-auto rcorners2\"\n                    image={getImage(image)}\n                    alt=\"game\"\n                    title=\"game\"\n                />\n                <div className=\"gaming_video_paly_icon absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n                    <span\n                        className=\"video_popup w-14 h-14 md:w-24 md:h-24 lg:w-28 lg:h-28 inline-block\"\n                        role=\"button\"\n                        tabIndex=\"0\"\n                        onClick={() => setOpen(true)}\n                        onKeyPress={(e) => console.log(e)}\n                    >\n                        <span\n                            className=\"animate-ping absolute inline-flex\n                     h-full w-full rounded-full bg-purple-100 opacity-50\"\n                        ></span>\n                        <StaticImage\n                            className=\"relative\"\n                            src=\"../../data/images/icons/play-btn.webp\"\n                            alt=\"game\"\n                            title=\"game\"\n                        />\n                    </span>\n                </div>\n\n                <div className=\"live_streaming_text absolute bottom-0 left-1/2 transform -translate-x-1/2\">\n                    <StaticImage\n                        src=\"../../data/images/live-video/text-mini-shape.webp\"\n                        alt=\"game\"\n                        title=\"game\"\n                    />\n                    <h3 className=\"text-white absolute bottom-0 inset-x-1/2 transform -translate-x-1/2 p-1 flex items-center justify-center w-full h-full font-bold uppercase text-xs  sm:text-sm md:text-22base lg:text-md\">\n                        {title}\n                    </h3>\n                </div>\n            </div>\n            <Video\n                channel={video_channel}\n                videoId={video_id}\n                isOpen={isOpen}\n                setOpen={setOpen}\n            />\n        </Fragment>\n    );\n};\nLiveStreaming.propTypes = {\n    title: PropTypes.string,\n    image: PropTypes.object,\n    video_link: PropTypes.string,\n};\nexport default LiveStreaming;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport LiveStreaming from \"../../../components/live-streaming\";\nimport Swiper, { SwiperSlide } from \"@components/shared/swiper\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\nconst WatchLiveStremingArea = ({ data }) => {\n    return (\n        <section className=\"watch-live-section py-16 md:py-28\">\n            <div className=\"container\">\n                <div className=\"relative\">\n                    <Swiper\n                        className=\"relative\"\n                        layout={{\n                            nav: \"watch-live-navigation\",\n                            dots: \"watch-live-dots-style\",\n                        }}\n                        navigation={{\n                            nextEl: \".watch-live-slider-button-next\",\n                            prevEl: \".watch-live-slider-button-prev\",\n                        }}\n                        slidesPerView={1}\n                        spaceBetween={0}\n                    >\n                        {data?.items &&\n                            data?.items.map((item) => (\n                                <SwiperSlide key={item.id}>\n                                    <LiveStreaming\n                                        title={\n                                            item?.liveStreaming?.headings[0]\n                                                .content\n                                        }\n                                        image={\n                                            item?.liveStreaming?.images[0].src\n                                        }\n                                        video_link={item?.liveStreaming?.link}\n                                    />\n                                </SwiperSlide>\n                            ))}\n                    </Swiper>\n                    <div className=\"absolute w-full z-10 top-1/2 transform -translate-y-1/2\">\n                        <div\n                            className=\"watch-live-slider-button-prev swipper-arrow text-white absolute top-2/4 \n                    transform -translate-x-2/4 w-14 h-10 lg:w-68 lg:h-55 flex items-center justify-center  \n                    bg-arrow-shape hover:bg-arrow-hover-shape transition-all left-auto -right-8 bg-cover\"\n                        >\n                            <StaticImage\n                                src=\"../../../data/images/icons/navigation-arrow1.webp\"\n                                alt=\"game\"\n                                title=\"game\"\n                            />\n                        </div>\n                        <div\n                            className=\"watch-live-slider-button-next swipper-arrow text-white absolute top-2/4 \n                    transform -translate-x-2/4 w-14 h-10 lg:w-68 lg:h-55 flex items-center justify-center \n                    bg-arrow-shape hover:bg-arrow-hover-shape transition-all left-8 bg-cover\"\n                        >\n                            <StaticImage\n                                src=\"../../../data/images/icons/navigation-arrow2.webp\"\n                                alt=\"game\"\n                                title=\"game\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\nWatchLiveStremingArea.propTypes = {\n    data: PropTypes.shape({\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\nexport default WatchLiveStremingArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GameCard from \"../../../components/games-card\";\nimport SectionTitle from \"../../../components/title\";\n\nconst PopulerGamesArea = ({ data }) => {\n    return (\n        <section className=\"populer-games-section pt-16 md:pt-24 py-16 md:py-28\">\n            <div className=\"container\">\n                {data?.section_title && (\n                    <div className=\"section-title mb-15\">\n                        <SectionTitle\n                            heading={data?.section_title.heading}\n                            {...data.section_title}\n                        />\n                    </div>\n                )}\n\n                <div className=\"flex flex-wrap -mt-8\">\n                    {data?.items &&\n                        data?.items.map((item) => (\n                            <div\n                                className=\"w-full md:w-1/2 lg:w-1/2 px-4\"\n                                key={item.id}\n                            >\n                                <GameCard\n                                    date={item?.date}\n                                    slug={item?.slug}\n                                    image={item.gameThum.src}\n                                    alt={item?.gameThum?.alt}\n                                    buttons={item?.buttons}\n                                    title=\"game\"\n                                />\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </section>\n    );\n};\nPopulerGamesArea.propTypes = {\n    data: PropTypes.shape({\n        section_title: PropTypes.shape({\n            heading: PropTypes.string,\n        }),\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            })\n        ),\n    }),\n};\nexport default PopulerGamesArea;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SEO from \"@components/seo\";\r\nimport Layout from \"@layout\";\r\nimport HeroArea from \"../container/home/hero\";\r\nimport WelcomeFeaturesArea from \"../container/home/welcome-features\";\r\nimport WatchLiveStremingArea from \"../container/home/watch-live-streaming\";\r\nimport PopulerGamesArea from \"../container/home/popular-game\";\r\nimport { graphql } from \"gatsby\";\r\nimport { normalizedData } from \"@utils/functions\";\r\n\r\nconst IndexPage = ({ data }) => {\r\n    const globalContent = normalizedData(data?.allGeneral?.nodes || []);\r\n    const content = normalizedData(data?.page?.content || []);\r\n    return (\r\n        <Layout\r\n            data={{\r\n                ...globalContent[\"menu\"],\r\n                ...globalContent[\"footer\"],\r\n            }}\r\n        >\r\n            <SEO title=\"Home\" pathname=\"/\" />\r\n            <HeroArea data={content[\"hero-section\"]} />\r\n            <WelcomeFeaturesArea data={content[\"welcome-section\"]} />\r\n            <div style={{textAlign:\"center\"}}>\r\n                <WatchLiveStremingArea data={{ items: data.allMatch.nodes }} />\r\n            </div>\r\n            \r\n            <PopulerGamesArea\r\n                data={{\r\n                    ...content[\"populer-games-section\"],\r\n                    items: data.allGames.nodes,\r\n                }}\r\n            />\r\n\r\n        </Layout>\r\n    );\r\n};\r\n\r\nIndexPage.propTypes = {\r\n    data: PropTypes.shape({\r\n        allGeneral: PropTypes.shape({\r\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\r\n        }),\r\n        page: PropTypes.shape({\r\n            content: PropTypes.arrayOf(PropTypes.shape({})),\r\n        }),\r\n        allMatch: PropTypes.shape({\r\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\r\n        }),\r\n        allGames: PropTypes.shape({\r\n            nodes: PropTypes.arrayOf(PropTypes.shape({})),\r\n        })\r\n    }),\r\n};\r\n\r\nexport const query = graphql`\r\n    query homePageQuery {\r\n        allGeneral {\r\n            nodes {\r\n                section\r\n                id\r\n                menu {\r\n                    ...Menu\r\n                }\r\n                footer {\r\n                    ...Footer\r\n                }\r\n            }\r\n        }\r\n        page(title: { eq: \"home\" }, pageType: { eq: homepage }) {\r\n            content {\r\n                ...PageContentAll\r\n            }\r\n        }\r\n        allMatch(sort: { order: DESC, fields: date }, limit: 3) {\r\n            nodes {\r\n                ...Matchs\r\n            }\r\n        }\r\n        allGames(sort: { order: DESC, fields: date }, limit: 4) {\r\n            nodes {\r\n                ...Games\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport default IndexPage;\r\n"],"names":["alt","slug","image","buttons","className","G","getImage","title","map","id","content","props","key","path","S","src","data","style","backgroundImage","HeroImage","headings","texts","description","iconImage","bgShapImage","image1","image2","section_title","heading","items","item","level","images","video_id","video_channel","video_link","split","useState","isOpen","setOpen","Fragment","role","tabIndex","onClick","onKeyPress","e","console","log","channel","videoId","layout","nav","dots","navigation","nextEl","prevEl","slidesPerView","spaceBetween","liveStreaming","link","date","gameThum","globalContent","normalizedData","allGeneral","nodes","page","pathname","textAlign","allMatch","allGames"],"sourceRoot":""}